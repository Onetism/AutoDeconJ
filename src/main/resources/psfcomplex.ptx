//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-24817639
// Cuda compilation tools, release 10.0, V10.0.130
// Based on LLVM 3.4svn
//

.version 6.3
.target sm_60
.address_size 64

	// .globl	psfcomplex
.func  (.param .b64 func_retval0) __internal_trig_reduction_slowpathd
(
	.param .b64 __internal_trig_reduction_slowpathd_param_0,
	.param .b64 __internal_trig_reduction_slowpathd_param_1
)
;
.const .align 8 .b8 __cudart_i2opi_d[144] = {8, 93, 141, 31, 177, 95, 251, 107, 234, 146, 82, 138, 247, 57, 7, 61, 123, 241, 229, 235, 199, 186, 39, 117, 45, 234, 95, 158, 102, 63, 70, 79, 183, 9, 203, 39, 207, 126, 54, 109, 31, 109, 10, 90, 139, 17, 47, 239, 15, 152, 5, 222, 255, 151, 248, 31, 59, 40, 249, 189, 139, 95, 132, 156, 244, 57, 83, 131, 57, 214, 145, 57, 65, 126, 95, 180, 38, 112, 156, 233, 132, 68, 187, 46, 245, 53, 130, 232, 62, 167, 41, 177, 28, 235, 29, 254, 28, 146, 209, 9, 234, 46, 73, 6, 224, 210, 77, 66, 58, 110, 36, 183, 97, 197, 187, 222, 171, 99, 81, 254, 65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};
.const .align 8 .b8 __cudart_sin_cos_coeffs[128] = {186, 94, 120, 249, 101, 219, 229, 61, 70, 210, 176, 44, 241, 229, 90, 190, 146, 227, 172, 105, 227, 29, 199, 62, 161, 98, 219, 25, 160, 1, 42, 191, 24, 8, 17, 17, 17, 17, 129, 63, 84, 85, 85, 85, 85, 85, 197, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 129, 253, 32, 131, 255, 168, 189, 40, 133, 239, 193, 167, 238, 33, 62, 217, 230, 6, 142, 79, 126, 146, 190, 233, 188, 221, 25, 160, 1, 250, 62, 71, 93, 193, 22, 108, 193, 86, 191, 81, 85, 85, 85, 85, 85, 165, 63, 0, 0, 0, 0, 0, 0, 224, 191, 0, 0, 0, 0, 0, 0, 240, 63};

.visible .entry psfcomplex(
	.param .u64 psfcomplex_param_0,
	.param .u64 psfcomplex_param_1,
	.param .f64 psfcomplex_param_2,
	.param .f64 psfcomplex_param_3,
	.param .u32 psfcomplex_param_4,
	.param .u32 psfcomplex_param_5
)
{
	.local .align 4 .b8 	__local_depot0[4];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<24>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<56>;
	.reg .f64 	%fd<174>;
	.reg .b64 	%rd<40>;


	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd10, [psfcomplex_param_0];
	ld.param.u64 	%rd11, [psfcomplex_param_1];
	ld.param.f64 	%fd54, [psfcomplex_param_2];
	ld.param.f64 	%fd55, [psfcomplex_param_3];
	ld.param.u32 	%r16, [psfcomplex_param_4];
	ld.param.u32 	%r17, [psfcomplex_param_5];
	add.u64 	%rd12, %SP, 0;
	add.u64 	%rd1, %SPL, 0;
	mov.u32 	%r18, %ntid.x;
	mov.u32 	%r19, %ctaid.x;
	mov.u32 	%r20, %tid.x;
	mad.lo.s32 	%r21, %r18, %r19, %r20;
	cvt.u64.u32	%rd5, %r21;
	mov.u32 	%r22, %ntid.y;
	mov.u32 	%r23, %ctaid.y;
	mov.u32 	%r24, %tid.y;
	mad.lo.s32 	%r25, %r22, %r23, %r24;
	cvt.u64.u32	%rd6, %r25;
	cvt.s64.s32	%rd16, %r16;
	setp.lt.s64	%p1, %rd5, %rd16;
	cvt.s64.s32	%rd7, %r17;
	setp.lt.s64	%p2, %rd6, %rd7;
	and.pred  	%p3, %p1, %p2;
	@!%p3 bra 	BB0_38;
	bra.uni 	BB0_1;

BB0_1:
	mul.lo.s64 	%rd17, %rd5, %rd7;
	add.s64 	%rd18, %rd6, %rd17;
	shl.b64 	%rd8, %rd18, 1;
	cvta.to.global.u64 	%rd19, %rd10;
	shl.b64 	%rd20, %rd18, 3;
	add.s64 	%rd21, %rd19, %rd20;
	ld.global.f32 	%f1, [%rd21];
	cvt.f64.f32	%fd1, %f1;
	ld.global.f32 	%f2, [%rd21+4];
	cvt.f64.f32	%fd2, %f2;
	mul.f64 	%fd170, %fd54, %fd55;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r26}, %fd170;
	}
	and.b32  	%r1, %r26, 2147483647;
	setp.ne.s32	%p4, %r1, 2146435072;
	mov.f64 	%fd158, %fd170;
	@%p4 bra 	BB0_4;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r27, %temp}, %fd170;
	}
	setp.ne.s32	%p5, %r27, 0;
	mov.f64 	%fd158, %fd170;
	@%p5 bra 	BB0_4;

	mov.f64 	%fd56, 0d0000000000000000;
	mul.rn.f64 	%fd158, %fd170, %fd56;

BB0_4:
	mul.f64 	%fd57, %fd158, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64	%r52, %fd57;
	st.local.u32 	[%rd1], %r52;
	cvt.rn.f64.s32	%fd58, %r52;
	neg.f64 	%fd59, %fd58;
	mov.f64 	%fd60, 0d3FF921FB54442D18;
	fma.rn.f64 	%fd61, %fd59, %fd60, %fd158;
	mov.f64 	%fd62, 0d3C91A62633145C00;
	fma.rn.f64 	%fd63, %fd59, %fd62, %fd61;
	mov.f64 	%fd64, 0d397B839A252049C0;
	fma.rn.f64 	%fd159, %fd59, %fd64, %fd63;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r28}, %fd158;
	}
	and.b32  	%r29, %r28, 2145386496;
	setp.lt.u32	%p6, %r29, 1105199104;
	@%p6 bra 	BB0_6;

	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd158;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd159, [retval0+0];
	
	//{
	}// Callseq End 0
	ld.local.u32 	%r52, [%rd1];

BB0_6:
	add.s32 	%r5, %r52, 1;
	and.b32  	%r30, %r5, 1;
	shl.b32 	%r31, %r30, 3;
	setp.eq.s32	%p7, %r30, 0;
	selp.f64	%fd65, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p7;
	mul.wide.u32 	%rd23, %r31, 8;
	mov.u64 	%rd24, __cudart_sin_cos_coeffs;
	add.s64 	%rd25, %rd23, %rd24;
	ld.const.f64 	%fd66, [%rd25+8];
	mul.rn.f64 	%fd9, %fd159, %fd159;
	fma.rn.f64 	%fd67, %fd65, %fd9, %fd66;
	ld.const.f64 	%fd68, [%rd25+16];
	fma.rn.f64 	%fd69, %fd67, %fd9, %fd68;
	ld.const.f64 	%fd70, [%rd25+24];
	fma.rn.f64 	%fd71, %fd69, %fd9, %fd70;
	ld.const.f64 	%fd72, [%rd25+32];
	fma.rn.f64 	%fd73, %fd71, %fd9, %fd72;
	ld.const.f64 	%fd74, [%rd25+40];
	fma.rn.f64 	%fd75, %fd73, %fd9, %fd74;
	ld.const.f64 	%fd76, [%rd25+48];
	fma.rn.f64 	%fd10, %fd75, %fd9, %fd76;
	fma.rn.f64 	%fd160, %fd10, %fd159, %fd159;
	@%p7 bra 	BB0_8;

	mov.f64 	%fd77, 0d3FF0000000000000;
	fma.rn.f64 	%fd160, %fd10, %fd9, %fd77;

BB0_8:
	and.b32  	%r32, %r5, 2;
	setp.eq.s32	%p8, %r32, 0;
	@%p8 bra 	BB0_10;

	mov.f64 	%fd78, 0d0000000000000000;
	mov.f64 	%fd79, 0dBFF0000000000000;
	fma.rn.f64 	%fd160, %fd160, %fd79, %fd78;

BB0_10:
	mov.f64 	%fd162, %fd170;
	@%p4 bra 	BB0_13;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r33, %temp}, %fd170;
	}
	setp.ne.s32	%p10, %r33, 0;
	mov.f64 	%fd162, %fd170;
	@%p10 bra 	BB0_13;

	mov.f64 	%fd80, 0d0000000000000000;
	mul.rn.f64 	%fd162, %fd170, %fd80;

BB0_13:
	mul.f64 	%fd81, %fd162, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64	%r53, %fd81;
	st.local.u32 	[%rd1], %r53;
	cvt.rn.f64.s32	%fd82, %r53;
	neg.f64 	%fd83, %fd82;
	fma.rn.f64 	%fd85, %fd83, %fd60, %fd162;
	fma.rn.f64 	%fd87, %fd83, %fd62, %fd85;
	fma.rn.f64 	%fd163, %fd83, %fd64, %fd87;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r34}, %fd162;
	}
	and.b32  	%r35, %r34, 2145386496;
	setp.lt.u32	%p11, %r35, 1105199104;
	@%p11 bra 	BB0_15;

	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd162;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd163, [retval0+0];
	
	//{
	}// Callseq End 1
	ld.local.u32 	%r53, [%rd1];

BB0_15:
	and.b32  	%r36, %r53, 1;
	shl.b32 	%r37, %r36, 3;
	setp.eq.s32	%p12, %r36, 0;
	selp.f64	%fd89, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p12;
	mul.wide.u32 	%rd27, %r37, 8;
	add.s64 	%rd29, %rd27, %rd24;
	ld.const.f64 	%fd90, [%rd29+8];
	mul.rn.f64 	%fd21, %fd163, %fd163;
	fma.rn.f64 	%fd91, %fd89, %fd21, %fd90;
	ld.const.f64 	%fd92, [%rd29+16];
	fma.rn.f64 	%fd93, %fd91, %fd21, %fd92;
	ld.const.f64 	%fd94, [%rd29+24];
	fma.rn.f64 	%fd95, %fd93, %fd21, %fd94;
	ld.const.f64 	%fd96, [%rd29+32];
	fma.rn.f64 	%fd97, %fd95, %fd21, %fd96;
	ld.const.f64 	%fd98, [%rd29+40];
	fma.rn.f64 	%fd99, %fd97, %fd21, %fd98;
	ld.const.f64 	%fd100, [%rd29+48];
	fma.rn.f64 	%fd22, %fd99, %fd21, %fd100;
	fma.rn.f64 	%fd164, %fd22, %fd163, %fd163;
	@%p12 bra 	BB0_17;

	mov.f64 	%fd101, 0d3FF0000000000000;
	fma.rn.f64 	%fd164, %fd22, %fd21, %fd101;

BB0_17:
	and.b32  	%r38, %r53, 2;
	setp.eq.s32	%p13, %r38, 0;
	@%p13 bra 	BB0_19;

	mov.f64 	%fd102, 0d0000000000000000;
	mov.f64 	%fd103, 0dBFF0000000000000;
	fma.rn.f64 	%fd164, %fd164, %fd103, %fd102;

BB0_19:
	mul.f64 	%fd104, %fd2, %fd164;
	mul.f64 	%fd105, %fd1, %fd160;
	sub.f64 	%fd106, %fd105, %fd104;
	mul.lo.s32 	%r39, %r17, %r16;
	cvt.rn.f64.s32	%fd28, %r39;
	div.rn.f64 	%fd107, %fd106, %fd28;
	cvt.rn.f32.f64	%f3, %fd107;
	cvta.to.global.u64 	%rd30, %rd11;
	shl.b64 	%rd31, %rd8, 2;
	add.s64 	%rd9, %rd30, %rd31;
	st.global.f32 	[%rd9], %f3;
	mov.f64 	%fd166, %fd170;
	@%p4 bra 	BB0_22;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r40, %temp}, %fd170;
	}
	setp.ne.s32	%p15, %r40, 0;
	mov.f64 	%fd166, %fd170;
	@%p15 bra 	BB0_22;

	mov.f64 	%fd108, 0d0000000000000000;
	mul.rn.f64 	%fd166, %fd170, %fd108;

BB0_22:
	mul.f64 	%fd109, %fd166, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64	%r54, %fd109;
	st.local.u32 	[%rd1], %r54;
	cvt.rn.f64.s32	%fd110, %r54;
	neg.f64 	%fd111, %fd110;
	fma.rn.f64 	%fd113, %fd111, %fd60, %fd166;
	fma.rn.f64 	%fd115, %fd111, %fd62, %fd113;
	fma.rn.f64 	%fd167, %fd111, %fd64, %fd115;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r41}, %fd166;
	}
	and.b32  	%r42, %r41, 2145386496;
	setp.lt.u32	%p16, %r42, 1105199104;
	@%p16 bra 	BB0_24;

	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd166;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd167, [retval0+0];
	
	//{
	}// Callseq End 2
	ld.local.u32 	%r54, [%rd1];

BB0_24:
	and.b32  	%r43, %r54, 1;
	shl.b32 	%r44, %r43, 3;
	setp.eq.s32	%p17, %r43, 0;
	selp.f64	%fd117, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p17;
	mul.wide.u32 	%rd33, %r44, 8;
	add.s64 	%rd35, %rd33, %rd24;
	ld.const.f64 	%fd118, [%rd35+8];
	mul.rn.f64 	%fd34, %fd167, %fd167;
	fma.rn.f64 	%fd119, %fd117, %fd34, %fd118;
	ld.const.f64 	%fd120, [%rd35+16];
	fma.rn.f64 	%fd121, %fd119, %fd34, %fd120;
	ld.const.f64 	%fd122, [%rd35+24];
	fma.rn.f64 	%fd123, %fd121, %fd34, %fd122;
	ld.const.f64 	%fd124, [%rd35+32];
	fma.rn.f64 	%fd125, %fd123, %fd34, %fd124;
	ld.const.f64 	%fd126, [%rd35+40];
	fma.rn.f64 	%fd127, %fd125, %fd34, %fd126;
	ld.const.f64 	%fd128, [%rd35+48];
	fma.rn.f64 	%fd35, %fd127, %fd34, %fd128;
	fma.rn.f64 	%fd168, %fd35, %fd167, %fd167;
	@%p17 bra 	BB0_26;

	mov.f64 	%fd129, 0d3FF0000000000000;
	fma.rn.f64 	%fd168, %fd35, %fd34, %fd129;

BB0_26:
	and.b32  	%r45, %r54, 2;
	setp.eq.s32	%p18, %r45, 0;
	@%p18 bra 	BB0_28;

	mov.f64 	%fd130, 0d0000000000000000;
	mov.f64 	%fd131, 0dBFF0000000000000;
	fma.rn.f64 	%fd168, %fd168, %fd131, %fd130;

BB0_28:
	mul.f64 	%fd41, %fd1, %fd168;
	@%p4 bra 	BB0_31;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r46, %temp}, %fd170;
	}
	setp.ne.s32	%p20, %r46, 0;
	@%p20 bra 	BB0_31;

	mov.f64 	%fd132, 0d0000000000000000;
	mul.rn.f64 	%fd170, %fd170, %fd132;

BB0_31:
	mul.f64 	%fd133, %fd170, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64	%r55, %fd133;
	st.local.u32 	[%rd1], %r55;
	cvt.rn.f64.s32	%fd134, %r55;
	neg.f64 	%fd135, %fd134;
	fma.rn.f64 	%fd137, %fd135, %fd60, %fd170;
	fma.rn.f64 	%fd139, %fd135, %fd62, %fd137;
	fma.rn.f64 	%fd171, %fd135, %fd64, %fd139;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r47}, %fd170;
	}
	and.b32  	%r48, %r47, 2145386496;
	setp.lt.u32	%p21, %r48, 1105199104;
	@%p21 bra 	BB0_33;

	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd170;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd171, [retval0+0];
	
	//{
	}// Callseq End 3
	ld.local.u32 	%r55, [%rd1];

BB0_33:
	add.s32 	%r15, %r55, 1;
	and.b32  	%r49, %r15, 1;
	shl.b32 	%r50, %r49, 3;
	setp.eq.s32	%p22, %r49, 0;
	selp.f64	%fd141, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p22;
	mul.wide.u32 	%rd37, %r50, 8;
	add.s64 	%rd39, %rd37, %rd24;
	ld.const.f64 	%fd142, [%rd39+8];
	mul.rn.f64 	%fd47, %fd171, %fd171;
	fma.rn.f64 	%fd143, %fd141, %fd47, %fd142;
	ld.const.f64 	%fd144, [%rd39+16];
	fma.rn.f64 	%fd145, %fd143, %fd47, %fd144;
	ld.const.f64 	%fd146, [%rd39+24];
	fma.rn.f64 	%fd147, %fd145, %fd47, %fd146;
	ld.const.f64 	%fd148, [%rd39+32];
	fma.rn.f64 	%fd149, %fd147, %fd47, %fd148;
	ld.const.f64 	%fd150, [%rd39+40];
	fma.rn.f64 	%fd151, %fd149, %fd47, %fd150;
	ld.const.f64 	%fd152, [%rd39+48];
	fma.rn.f64 	%fd48, %fd151, %fd47, %fd152;
	fma.rn.f64 	%fd172, %fd48, %fd171, %fd171;
	@%p22 bra 	BB0_35;

	mov.f64 	%fd153, 0d3FF0000000000000;
	fma.rn.f64 	%fd172, %fd48, %fd47, %fd153;

BB0_35:
	and.b32  	%r51, %r15, 2;
	setp.eq.s32	%p23, %r51, 0;
	@%p23 bra 	BB0_37;

	mov.f64 	%fd154, 0d0000000000000000;
	mov.f64 	%fd155, 0dBFF0000000000000;
	fma.rn.f64 	%fd172, %fd172, %fd155, %fd154;

BB0_37:
	fma.rn.f64 	%fd156, %fd2, %fd172, %fd41;
	div.rn.f64 	%fd157, %fd156, %fd28;
	cvt.rn.f32.f64	%f4, %fd157;
	st.global.f32 	[%rd9+4], %f4;

BB0_38:
	ret;
}

.func  (.param .b64 func_retval0) __internal_trig_reduction_slowpathd(
	.param .b64 __internal_trig_reduction_slowpathd_param_0,
	.param .b64 __internal_trig_reduction_slowpathd_param_1
)
{
	.local .align 8 .b8 	__local_depot1[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<9>;
	.reg .b32 	%r<42>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<101>;


	mov.u64 	%SPL, __local_depot1;
	ld.param.f64 	%fd4, [__internal_trig_reduction_slowpathd_param_0];
	ld.param.u64 	%rd37, [__internal_trig_reduction_slowpathd_param_1];
	add.u64 	%rd1, %SPL, 0;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1}, %fd4;
	}
	and.b32  	%r40, %r1, -2147483648;
	shr.u32 	%r3, %r1, 20;
	bfe.u32 	%r4, %r1, 20, 11;
	setp.eq.s32	%p1, %r4, 2047;
	@%p1 bra 	BB1_13;

	add.s32 	%r15, %r4, -1024;
	shr.u32 	%r16, %r15, 6;
	mov.u32 	%r17, 15;
	sub.s32 	%r5, %r17, %r16;
	mov.u32 	%r18, 19;
	sub.s32 	%r19, %r18, %r16;
	mov.u32 	%r20, 18;
	min.s32 	%r6, %r20, %r19;
	mov.u64 	%rd94, 0;
	setp.ge.s32	%p2, %r5, %r6;
	mov.u64 	%rd93, %rd1;
	@%p2 bra 	BB1_4;

	bfe.u32 	%r21, %r1, 20, 11;
	add.s32 	%r22, %r21, -1024;
	shr.u32 	%r23, %r22, 6;
	sub.s32 	%r25, %r17, %r23;
	mul.wide.s32 	%rd41, %r25, 8;
	mov.u64 	%rd42, __cudart_i2opi_d;
	add.s64 	%rd89, %rd42, %rd41;
	mov.b64 	 %rd43, %fd4;
	shl.b64 	%rd44, %rd43, 11;
	or.b64  	%rd5, %rd44, -9223372036854775808;
	mov.u64 	%rd94, 0;
	mov.u64 	%rd93, %rd1;
	mov.u64 	%rd91, %rd1;
	mov.u32 	%r39, %r5;

BB1_3:
	.pragma "nounroll";
	ld.const.u64 	%rd47, [%rd89];
	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, alo, ahi, blo, bhi, clo, chi;
	mov.b64         {alo,ahi}, %rd47;    
	mov.b64         {blo,bhi}, %rd5;    
	mov.b64         {clo,chi}, %rd94;    
	mad.lo.cc.u32   r0, alo, blo, clo;
	madc.hi.cc.u32  r1, alo, blo, chi;
	madc.hi.u32     r2, alo, bhi,   0;
	mad.lo.cc.u32   r1, alo, bhi,  r1;
	madc.hi.cc.u32  r2, ahi, blo,  r2;
	madc.hi.u32     r3, ahi, bhi,   0;
	mad.lo.cc.u32   r1, ahi, blo,  r1;
	madc.lo.cc.u32  r2, ahi, bhi,  r2;
	addc.u32        r3,  r3,   0;     
	mov.b64         %rd45, {r0,r1};      
	mov.b64         %rd94, {r2,r3};      
	}
	// inline asm
	st.local.u64 	[%rd91], %rd45;
	add.s32 	%r39, %r39, 1;
	sub.s32 	%r26, %r39, %r5;
	mul.wide.s32 	%rd50, %r26, 8;
	add.s64 	%rd91, %rd1, %rd50;
	add.s64 	%rd93, %rd93, 8;
	add.s64 	%rd89, %rd89, 8;
	setp.lt.s32	%p3, %r39, %r6;
	@%p3 bra 	BB1_3;

BB1_4:
	st.local.u64 	[%rd93], %rd94;
	ld.local.u64 	%rd95, [%rd1+16];
	ld.local.u64 	%rd96, [%rd1+24];
	and.b32  	%r9, %r3, 63;
	setp.eq.s32	%p4, %r9, 0;
	@%p4 bra 	BB1_6;

	mov.u32 	%r27, 64;
	sub.s32 	%r28, %r27, %r9;
	shl.b64 	%rd51, %rd96, %r9;
	shr.u64 	%rd52, %rd95, %r28;
	or.b64  	%rd96, %rd51, %rd52;
	shl.b64 	%rd53, %rd95, %r9;
	ld.local.u64 	%rd54, [%rd1+8];
	shr.u64 	%rd55, %rd54, %r28;
	or.b64  	%rd95, %rd55, %rd53;

BB1_6:
	shr.u64 	%rd56, %rd96, 62;
	cvt.u32.u64	%r29, %rd56;
	shr.u64 	%rd57, %rd95, 62;
	shl.b64 	%rd58, %rd96, 2;
	or.b64  	%rd98, %rd58, %rd57;
	shl.b64 	%rd97, %rd95, 2;
	shr.u64 	%rd59, %rd96, 61;
	cvt.u32.u64	%r30, %rd59;
	and.b32  	%r31, %r30, 1;
	add.s32 	%r32, %r31, %r29;
	neg.s32 	%r33, %r32;
	setp.eq.s32	%p5, %r40, 0;
	selp.b32	%r34, %r32, %r33, %p5;
	cvta.to.local.u64 	%rd60, %rd37;
	st.local.u32 	[%rd60], %r34;
	setp.eq.s32	%p6, %r31, 0;
	@%p6 bra 	BB1_8;

	mov.u64 	%rd64, 0;
	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, a0, a1, a2, a3, b0, b1, b2, b3;
	mov.b64         {a0,a1}, %rd64;
	mov.b64         {a2,a3}, %rd64;
	mov.b64         {b0,b1}, %rd97;
	mov.b64         {b2,b3}, %rd98;
	sub.cc.u32      r0, a0, b0; 
	subc.cc.u32     r1, a1, b1; 
	subc.cc.u32     r2, a2, b2; 
	subc.u32        r3, a3, b3; 
	mov.b64         %rd97, {r0,r1};
	mov.b64         %rd98, {r2,r3};
	}
	// inline asm
	xor.b32  	%r40, %r40, -2147483648;

BB1_8:
	clz.b64 	%r41, %rd98;
	setp.eq.s32	%p7, %r41, 0;
	@%p7 bra 	BB1_10;

	shl.b64 	%rd67, %rd98, %r41;
	mov.u32 	%r35, 64;
	sub.s32 	%r36, %r35, %r41;
	shr.u64 	%rd68, %rd97, %r36;
	or.b64  	%rd98, %rd68, %rd67;

BB1_10:
	mov.u64 	%rd72, -3958705157555305931;
	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, alo, ahi, blo, bhi;
	mov.b64         {alo,ahi}, %rd98;   
	mov.b64         {blo,bhi}, %rd72;   
	mul.lo.u32      r0, alo, blo;    
	mul.hi.u32      r1, alo, blo;    
	mad.lo.cc.u32   r1, alo, bhi, r1;
	madc.hi.u32     r2, alo, bhi,  0;
	mad.lo.cc.u32   r1, ahi, blo, r1;
	madc.hi.cc.u32  r2, ahi, blo, r2;
	madc.hi.u32     r3, ahi, bhi,  0;
	mad.lo.cc.u32   r2, ahi, bhi, r2;
	addc.u32        r3, r3,  0;      
	mov.b64         %rd69, {r0,r1};     
	mov.b64         %rd100, {r2,r3};     
	}
	// inline asm
	setp.lt.s64	%p8, %rd100, 1;
	@%p8 bra 	BB1_12;

	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, a0, a1, a2, a3, b0, b1, b2, b3;
	mov.b64         {a0,a1}, %rd69;
	mov.b64         {a2,a3}, %rd100;
	mov.b64         {b0,b1}, %rd69;
	mov.b64         {b2,b3}, %rd100;
	add.cc.u32      r0, a0, b0; 
	addc.cc.u32     r1, a1, b1; 
	addc.cc.u32     r2, a2, b2; 
	addc.u32        r3, a3, b3; 
	mov.b64         %rd73, {r0,r1};
	mov.b64         %rd100, {r2,r3};
	}
	// inline asm
	add.s32 	%r41, %r41, 1;

BB1_12:
	cvt.u64.u32	%rd79, %r40;
	shl.b64 	%rd80, %rd79, 32;
	mov.u32 	%r37, 1022;
	sub.s32 	%r38, %r37, %r41;
	cvt.u64.u32	%rd81, %r38;
	shl.b64 	%rd82, %rd81, 52;
	add.s64 	%rd83, %rd100, 1;
	shr.u64 	%rd84, %rd83, 10;
	add.s64 	%rd85, %rd84, 1;
	shr.u64 	%rd86, %rd85, 1;
	add.s64 	%rd87, %rd86, %rd82;
	or.b64  	%rd88, %rd87, %rd80;
	mov.b64 	 %fd4, %rd88;

BB1_13:
	st.param.f64	[func_retval0+0], %fd4;
	ret;
}


